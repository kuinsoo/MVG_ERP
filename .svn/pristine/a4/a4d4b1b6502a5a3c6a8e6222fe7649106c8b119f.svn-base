<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- 처리할 SQL문을 작성하는 문서 -->

<!-- namespace속성 : 아래에서 작성한 SQL문을 호출할 때 같이 사용한다. -->
<sqlMap namespace="attd">
	<typeAlias alias="attdEmpVo" type="humanResources.vo.join.AttendedEmpVo"/>
	<typeAlias alias="attdVo" type="humanResources.vo.AttendedVo"/>
	
	
	<!-- 출결 리스트 전부 출력 -->
	<select id="listAttend" resultClass="attdEmpVo">
		SELECT	attd_emp,
		        emp_name,
		        pos_name,
		        dept_name,
		        attd_chk,
		        attd_note
		FROM POSITION INNER JOIN EMPLOYEE ON POS_CODE = EMP_POS
		INNER JOIN ATTENDED ON EMP_CODE = ATTD_EMP
		INNER JOIN DEPARTMENT ON EMP_DEPT = DEPT_CODE
	</select>
	
		<!-- 출결 리스트 오늘날짜 출력 -->
	<select id="listToday" parameterClass="String" resultClass="attdEmpVo">
		SELECT	attd_emp,
		        emp_name,
		        pos_name,
		        dept_name,
		        attd_chk,
		        attd_note
		FROM POSITION INNER JOIN EMPLOYEE ON POS_CODE = EMP_POS
		INNER JOIN ATTENDED ON EMP_CODE = ATTD_EMP
		INNER JOIN DEPARTMENT ON EMP_DEPT = DEPT_CODE
		where attd_date = #attd_date#
	</select>
	
	
	<!-- 출결관련 조건 검색  -->
	<select id="searchAttend" parameterClass="java.util.HashMap" resultClass="attdEmpVo">
		SELECT 	attd_emp,
		        emp_name,
		        pos_name,
		        dept_name,
		        attd_chk,
		        attd_note
		FROM POSITION INNER JOIN EMPLOYEE ON POS_CODE = EMP_POS
		INNER JOIN ATTENDED ON EMP_CODE = ATTD_EMP
		INNER JOIN DEPARTMENT ON EMP_DEPT = DEPT_CODE
		WHERE attd_date = #attd_date# 
		<dynamic prepend="AND">
			<isNull property="emp_name">
				(attd_emp = #attd_emp# or dept_name = #dept_name# or pos_name = #pos_name#)
			</isNull>
			<isNotEmpty property="emp_name">
				(emp_name like '%' || #emp_name# || '%' )
			</isNotEmpty> 
		</dynamic>
	 	</select>
	 	
	 	<!-- 출결 체크 합니다. -->
	 	<update id="checkAttend" parameterClass="java.util.HashMap" >
	 	MERGE INTO attended
		USING DUAL
		ON (attd_emp = #attd_emp#
		    and (attd_date =  to_char(sysdate,'yyyy-mm-dd')))
		WHEN MATCHED THEN
		  UPDATE set
		    ATTD_CHK = 'Y'
		WHEN NOT MATCHED then
		 insert (ATTD_NO, ATTD_EMP, ATTD_DATE, ATTD_CHK, ATTD_NOTE)
		 values (#attd_emp# || to_char(sysdate,'yyyymmdd') , #attd_emp#, to_char(sysdate,'yyyy-mm-dd'), 'Y' , #attd_note#)
	 	</update>
	 	

	 	<!-- 출석 여부 확인 	 	--> 
	 	<select id="checkAttendEmp" parameterClass="String" resultClass="attdVo">
	 	select * from ATTENDED where  ATTD_DATE = to_char(sysdate,'yyyy-mm-dd') and  ATTD_EMP = #attd_emp#
	 	</select>
  
 </sqlMap>